
#종류 변수 선언
mf = '\u2610'           #메인피더
fd = '\u2610'           #피더
frk1 = '\u2218'         #분기점(ㅗ)
# frk2 = '유니코드'        #분기점(ㅜ)
# frk3 = '유니코드'        #분기점(ㅏ)
# frk4 = '유니코드'        #분기점(ㅓ)
# frk5 = '유니코드'        #분기점(십자모양)
hline = '\u2500'        #수평방향 선로
vline = '\u2502'        #수직방향 선로
sw = '\u25CB'           #개폐기

#(x좌표, y좌표, 종류, 값[kVA], tag)
#([8,8,frk,0,0]) -> 얘는 분기점 if문에 사용하기 위해서 굳이 넣었고, 좌표값만 알면돼서 값은 0
#피더에 연결된 수평, 수직방향 선로 + 개폐기는 값 없음
#분기점에 연결된 3개 부하 선로 (위1개, 왼쪽1개, 오른쪽 1개) 는 부하값을 다 넣어줬음
#나중에 직선경로부하 구할 때 한번 빼주면 되니까,,


jh =    [
        [[0,0,0,0,0], [0,1,0,0,0], [0,2,0,0,0], [0,3,0,0,0], [0,4,0,0,0], [0,5,0,0,0], [0,6,0,0,0], [0,7,fd,5500,0], [0,8,0,0,0], [0,9,0,0,0], [0,10,0,0,0], [0,11,0,0,0], [0,12,0,0,0]], 
        [[1,0,0,0,0], [1,1,0,0,0], [1,2,0,0,0], [1,3,0,0,0], [1,4,0,0,0], [1,5,0,0,0], [1,6,0,0,0], [1,7,vline,0,0], [1,8,0,0,0], [1,9,0,0,0], [1,10,0,0,0], [1,11,0,0,0], [1,12,0,0,0]], 
        [[2,0,0,0,0], [2,1,0,0,0], [2,2,0,0,0], [2,3,0,0,0], [2,4,0,0,0], [2,5,0,0,0], [2,6,0,0,0], [2,7,sw,0,0], [2,8,0,0,0], [2,9,0,0,0], [2,10,0,0,0], [2,11,0,0,0], [2,12,0,0,0]], 
        [[3,0,0,0,0], [3,1,0,0,0], [3,2,0,0,0], [3,3,0,0,0], [3,4,0,0,0], [3,5,0,0,0], [3,6,0,0,0], [3,7,vline,1500,0], [3,8,0,0,0], [3,9,0,0,0], [3,10,0,0,0], [3,11,0,0,0], [3,12,0,0,0]], 
        [[4,0,0,0,0], [4,1,0,0,0], [4,2,0,0,0], [4,3,0,0,0], [4,4,0,0,0], [4,5,0,0,0], [4,6,0,0,0], [4,7,sw,0,0], [4,8,0,0,0], [4,9,0,0,0], [4,10,0,0,0], [4,11,0,0,0], [4,12,0,0,0]], 
        [[5,0,0,0,0], [5,1,0,0,0], [5,2,0,0,0], [5,3,0,0,0], [5,4,0,0,0], [5,5,0,0,0], [5,6,0,0,0], [5,7,vline,1000,0], [5,8,0,0,0], [5,9,0,0,0], [5,10,0,0,0], [5,11,0,0,0], [5,12,0,0,0]], 
        [[6,0,0,0,0], [6,1,0,0,0], [6,2,0,0,0], [6,3,0,0,0], [6,4,0,0,0], [6,5,0,0,0], [6,6,0,0,0], [6,7,sw,0,0], [6,8,0,0,0], [6,9,0,0,0], [6,10,0,0,0], [6,11,0,0,0], [6,12,0,0,0]], 
        [[7,0,mf,14000,0], [7,1,hline,0,0], [7,2,sw,0,0], [7,3,hline,1000,0], [7,4,sw,0,0], [7,5,hline,500,0], [7,6,sw,0,0], [7,7,frk1,1000,0], [7,8,sw,0,0], [7,9,hline,500,0], [7,10,sw,0,0], [7,11,hline,0,0], [7,12,fd,4500,0]]
         ]

# 서브피더, 부하, 분기점에 대한 리스트 먼저 만들어줘야 전역변수 쓸 수 있음

# 먼저 5번째 원소 넣은다음에

# 부하, 서브피더, 분기점 리스트 만들기

n1 = na = nb = 0

for i in range(8):
    for j in range(13):
        if jh[i][j][2] == fd and jh[i][j][3] != 14000:
            n1 += 1

for i in range(8):
    for j in range(13):
        if (jh[i][j][2] == hline or jh[i][j][2] == vline) and jh[i][j][3] != 0:
            na += 1

for i in range(8):
    for j in range(13):
        if jh[i][j][2] == frk1:                     #frk1,2,3,4,5에 대해서도 넣기
            nb += 1

n2 = na + nb

print(n1, n2, na, nb)
# 이제 이 숫자로 리스트 폼 만들고나서 jh에 tag 할당할거임

def F(i):
    return "F"+str(i)

def Load(i):
    return "Z"+str(i)

# def jnuc(i):
#     return "FRK"+str(i)

SF = []
Z = []
FRK = []

for i in range(1,n1+1):
    SF.append(F(i))

for i in range(1, n2+1):
    Z.append(Load(i))

# for i in range(1, n3+1):          #FRK는 jh 5번째 원소에 할당한뒤에 해야할듯 할당이 먼저다!
#     FRK.append()

# print(SF, Z, FRK)


a=b=0

for i in range(8):
    for j in range(13):
        if jh[i][j][2] == fd and jh[i][j][3] != 14000:
            jh[i][j][4] = SF[a]
            a += 1

for i in range(8):
    for j in range(13):
        if ((jh[i][j][2] == hline or jh[i][j][2] == vline) and jh[i][j][3] != 0) or jh[i][j][2] == frk1:
            jh[i][j][4] = Z[b]
            b += 1

for i in range(8):
    for j in range(13):
        if jh[i][j][2] == frk1:
            FRK.append(jh[i][j][4])


#메인피더의 x좌표, y좌표 구하기
mx=my=0     
for i in range(8):
    for j in range(13):
        if jh[i][j][2] == mf:
            my = jh[i][j][0]
            mx = jh[i][j][1]


for i in range(8):
    for j in range(13):
        if jh[i][j][2] == frk1:
            for q in range(8):
                if jh[q][j][2] == frk1:
                    dsdsdsd
                else:
                    

print(jh[0][7][4])
print(jh[7][12][4])
print(jh[7][3][4])
print(jh[7][5][4])
print(jh[7][7][4])
print(FRK[0])
print(SF, Z, FRK)